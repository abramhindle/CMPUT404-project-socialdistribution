# Generated by Django 3.2.8 on 2021-11-23 03:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('type', models.CharField(default='author', editable=False, max_length=6)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('host', models.URLField(default='http://127.0.0.1:8000/', editable=False)),
                ('url', models.URLField(editable=False)),
                ('display_name', models.CharField(blank=True, max_length=200)),
                ('github_url', models.URLField(blank=True)),
                ('profile_image', models.URLField(blank=True)),
                ('followers', models.ManyToManyField(blank=True, related_name='follower', to='backend.Author')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('host', models.URLField(primary_key=True, serialize=False)),
                ('auth_info', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Inbox',
            fields=[
                ('type', models.CharField(default='inbox', editable=False, max_length=5)),
                ('id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='inbox', serialize=False, to='backend.author')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('type', models.CharField(default='post', editable=False, max_length=4)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(editable=False, max_length=500)),
                ('title', models.CharField(max_length=200)),
                ('source', models.URLField(blank=True, max_length=500)),
                ('origin', models.URLField(blank=True, max_length=500)),
                ('description', models.CharField(blank=True, max_length=240)),
                ('content_type', models.CharField(choices=[('text/markdown', 'text/markdown'), ('text/plain', 'text/plain'), ('application/base64', 'application/base64'), ('image/png;base64', 'image/png;base64'), ('image/jpeg;base64', 'image/jpeg;base64')], default='text/plain', max_length=30)),
                ('content', models.TextField(blank=True)),
                ('categories', models.TextField(default='[]')),
                ('published', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('visibility', models.CharField(choices=[('PUBLIC', 'PUBLIC'), ('FRIENDS', 'FRIENDS'), ('PRIVATE', 'PRIVATE')], default='PUBLIC', max_length=30)),
                ('comment_url', models.URLField(default='<django.db.models.fields.URLField>/comments', editable=False, max_length=500)),
                ('unlisted', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posted', to='backend.author')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(default='Like', editable=False, max_length=4)),
                ('object', models.URLField(editable=False, max_length=500)),
                ('summary', models.CharField(max_length=200)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked', to='backend.author')),
            ],
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('type', models.CharField(default='Follow', editable=False, max_length=6)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('summary', models.CharField(max_length=200)),
                ('actor', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='sent_friend_requests', to='backend.author')),
                ('object', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, related_name='recipient_friend_requests', to='backend.author')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('type', models.CharField(default='comment', editable=False, max_length=7)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(editable=False, max_length=500)),
                ('content_type', models.CharField(choices=[('text/markdown', 'text/markdown'), ('text/plain', 'text/plain'), ('application/base64', 'application/base64'), ('image/png;base64', 'image/png;base64'), ('image/jpeg;base64', 'image/jpeg;base64')], default='text/plain', max_length=30)),
                ('comment', models.TextField()),
                ('published', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.author')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='backend.post')),
            ],
        ),
        migrations.AddConstraint(
            model_name='like',
            constraint=models.UniqueConstraint(fields=('author', 'object'), name='unique_like'),
        ),
        migrations.AddField(
            model_name='inbox',
            name='friend_requests',
            field=models.ManyToManyField(blank=True, related_name='inbox_friend_request', to='backend.FriendRequest'),
        ),
        migrations.AddField(
            model_name='inbox',
            name='likes',
            field=models.ManyToManyField(blank=True, related_name='inbox_like', to='backend.Like'),
        ),
        migrations.AddField(
            model_name='inbox',
            name='posts',
            field=models.ManyToManyField(blank=True, related_name='inbox_post', to='backend.Post'),
        ),
        migrations.AddConstraint(
            model_name='friendrequest',
            constraint=models.UniqueConstraint(fields=('actor', 'object'), name='unique_friend_request'),
        ),
    ]
